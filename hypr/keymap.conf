
# ██╗  ██╗███████╗██╗   ██╗███╗   ███╗ █████╗ ██████╗ 
# ██║ ██╔╝██╔════╝╚██╗ ██╔╝████╗ ████║██╔══██╗██╔══██╗
# █████╔╝ █████╗   ╚████╔╝ ██╔████╔██║███████║██████╔╝
# ██╔═██╗ ██╔══╝    ╚██╔╝  ██║╚██╔╝██║██╔══██║██╔═══╝ 
# ██║  ██╗███████╗   ██║   ██║ ╚═╝ ██║██║  ██║██║     
# ╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝     
# See https://wiki.hyprland.org/Configuring/Keywords/
#  &  https://wiki.hyprland.org/Configuring/Binds/

# Define variables
$mainMod = SUPER

# Assign applications
$browser = floorp
$terminal = kitty -c ~/dotfiles/kitty/kitty.conf
$menu = wofi --show drun --style ~/dotfiles/wofi/style.css --prompt "Run:" 

# Launching applications
bind = $mainMod, B, exec, $browser
bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod, A, exec, pkill pavucontrol || pavucontrol

# Screenshot with mainMod + S or P
bind = $mainMod, S, exec, grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot copied to clipboard"
bind = ALT, S, exec, grim - | wl-copy && notify-send "Screenshot copied to clipboard"
bind = $mainMod SHIFT, S, exec, grim -g "$(slurp)" ~/Pictures/Screenshots/Screenshot_$(date +%F-%H-%M-%S).png && notify-send "Screenshot saved to ~/Pictures/Screenshots"
bind = ALT SHIFT, S, exec, grim ~/Pictures/Screenshots/Screenshot_$(date +%F-%H-%M-%S).png && notify-send "Screenshot saved to ~/Pictures/Screenshots"

# Control window
bind = $mainMod, F, togglefloating
bind = ,F11, fullscreen

# Open menu with mainMod + Space
bind = $mainMod, Space, exec, $menu

# Open clipboard manager with mainMod + V
bind = $mainMod, V, exec, cliphist list | wofi --dmenu --allow-images --prompt "Clipboard" --style ~/dotfiles/wofi/style.css | cliphist decode | wl-copy 

# Color picker with mainMod + C
bind = $mainMod, C, exec, hyprpicker -a

# Dwindle bindings
bind = $mainMod, O, pseudo # dwindle
bind = $mainMod SHIFT, O, togglesplit # dwindle

# Move focus with ALT + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Move active window with ALT + SHIFT + HJKL
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Special workspaces
bind = $mainMod, W, togglespecialworkspace, magic
bind = $mainMod SHIFT, W, movetoworkspace, special:magic

# Close window and show logout menu
bind = $mainMod, Q, killactive
bind = $mainMod SHIFT, Q, exec, wlogout -C ~/dotfiles/wlogout/style.css -l ~/dotfiles/wlogout/layout -b 2
bind = $mainMod CONTROL, Q, exec, swaylock -f -C ~/dotfiles/swaylock/config

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Media keys
$volume = $(pactl get-sink-volume @DEFAULT_SINK@ | grep -oP "\d+%" | head -1)
$isMuted = $(pactl list sinks | grep Mute | awk '{print $2}' | head -1 | sed 's/no/Unmuted/' | sed 's/yes/Muted/')

bind = , XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5% && notify-send "Increased volume to $volume" 
bind = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5% && notify-send "Decreased volume to $volume"
bind = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send "Microphone muted/unmuted"
bind = , XF86AudioMute, exec,  pactl set-sink-mute @DEFAULT_SINK@ toggle && notify-send "Volume $isMuted" 
bind = , XF86AudioPlay, exec, playerctl play-pause 
bind = , XF86AudioPause, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

# Screen brightness
$brightness = $(brightnessctl g | awk '{print int($1/192)}')

bind = , XF86MonBrightnessUp, exec, brightnessctl s +5% && notify-send "Increased brightness to $brightness%"
bind = , XF86MonBrightnessDown, exec, brightnessctl s 5%- && notify-send "Decreased brightness to $brightness%"

